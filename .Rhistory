valid_package_name("ExcelFilterSplit")
usethis::use_vignette("How-to-use-ExcelFilterSplit")
#' @return
#'
#' @import magrittr
#' @import magrittr
#' @import magrittr
#' @import magrittr
#' @import magrittr
#'
#' @importFrom stats na.omit
#'   "tools",
"readxl",
"openxlsx",
"stringi",
"itertools2",
"fs",
"shiny"
devtools::use_package("tools")
library(ExcelFilterSplit)
set.seed(1234)
#getwd()
MY_input_path <- "/Users/Pro/Desktop/FilterLoop App/FilterLoop/data/TESTTEST.xlsx"
MY_input_filterby <- "Public"
MY_output_names1 <- "2020/12/23"
MY_output_names2 <- "magic"
# MY_output_format
# MY_output_cols
# MY_input_CSVsep
# MY_input_EXCsheet
# MY_output_EXCstyle
MY_output_EXCsheets <-c("Teachers", "Participants2")
# MY_output_maxfiles
# MY_ShinyApp_zipfilename
ExcelFilterSplit(input_path = MY_input_path,
input_filterby = MY_input_filterby,
output_names1 = MY_output_names1,
output_names2 = MY_output_names2,
#output_format = MY_output_format,
#output_cols = MY_output_cols,
#input_CSVsep = MY_input_CSVsep,
#input_EXCsheet = MY_input_EXCsheet,
#output_EXCstyle = MY_output_EXCstyle,
output_EXCsheets = MY_output_EXCsheets,
#output_maxfiles = MY_output_maxfiles,
ShinyApp_zipfilename = NULL
)
shiny::runApp('~/Desktop/FilterLoop App/FilterLoop')
runApp('~/Desktop/FilterLoop App/FilterLoop')
runApp('~/Desktop/FilterLoop App/FilterLoop')
library(ExcelFilterSplit)
runApp('~/Desktop/FilterLoop App/FilterLoop')
library(ExcelFilterSplit)
runApp('~/Desktop/FilterLoop App/FilterLoop')
library(ExcelFilterSplit)
runApp('~/Desktop/FilterLoop App/FilterLoop')
runApp('~/Desktop/FilterLoop App/FilterLoop')
runApp()
runApp('~/Desktop/FilterLoop App/FilterLoop')
library(ExcelFilterSplit)
library(ExcelFilterSplit)
shiny::runApp('~/Desktop/FilterLoop App/FilterLoop')
library(ExcelFilterSplit)
library(ExcelFilterSplit)
library(ExcelFilterSplit)
library(ExcelFilterSplit)
shiny::runApp('~/Desktop/FilterLoop App/FilterLoop')
library(ExcelFilterSplit)
runApp('~/Desktop/FilterLoop App/FilterLoop')
runApp('~/Desktop/FilterLoop App/FilterLoop')
runApp('~/Desktop/FilterLoop App/FilterLoop')
runApp('~/Desktop/FilterLoop App/FilterLoop')
runApp('~/Desktop/FilterLoop App/FilterLoop')
library(ExcelFilterSplit)
library(ExcelFilterSplit)
runApp('~/Desktop/FilterLoop App/FilterLoop')
library(ExcelFilterSplit)
runApp('~/Desktop/FilterLoop App/FilterLoop')
library(ExcelFilterSplit)
runApp('~/Desktop/FilterLoop App/FilterLoop')
library(ExcelFilterSplit)
library(ExcelFilterSplit)
set.seed(1234)
# Example Excel file
data = tribble(
~Company, ~EmployeeID, ~Info,
"AA", 11, "Info1",
"BB", 12, "Info2",
"BB", 13, "Info3",
"AA", 14, "Info4",
"CC", 15, "Info5"
)
# Example Excel file
data = tibble(
~Company, ~EmployeeID, ~Info,
"AA", 11, "Info1",
"BB", 12, "Info2",
"BB", 13, "Info3",
"AA", 14, "Info4",
"CC", 15, "Info5"
)
# Example Excel file
data = tibble::tibble(
~Company, ~EmployeeID, ~Info,
"AA", 11, "Info1",
"BB", 12, "Info2",
"BB", 13, "Info3",
"AA", 14, "Info4",
"CC", 15, "Info5"
)
# Example Excel file
data = tibble::tibble(
~Company, ~EmployeeID, ~Info,
AA, 11, "Info1",
BB, 12, "Info2",
BB, 13, "Info3",
AA, 14, "Info4",
CC, 15, "Info5"
)
styler:::style_selection()
styler:::style_selection()
## Example Excel file
data <- list(
c(Company = "AA", EmployeeID = "1", Info = "Info1"),
c(Company = "BB", EmployeeID = "2", Info = "Info2"),
c(Company = "BB", EmployeeID = "3", Info = "Info3"),
c(Company = "AA", EmployeeID = "4", Info = "Info4"),
c(Company = "CC", EmployeeID = "5", Info = "Info5")
)
data <- as.data.frame(data)
openxlsx::write.xlsx(data, file = "example.xlsx")
# ExcelFilterSplit
# getwd()
MY_input_path <- "example.xlsx"
MY_input_filterby <- "Company"
ExcelFilterSplit::ExcelFilterSplit(
input_path = MY_input_path,
input_filterby = MY_input_filterby
)
## Example Excel file
data <- list(
c(Company = "AA", EmployeeID = "1", Info = "Info1"),
c(Company = "BB", EmployeeID = "2", Info = "Info2"),
c(Company = "BB", EmployeeID = "3", Info = "Info3"),
c(Company = "AA", EmployeeID = "4", Info = "Info4"),
c(Company = "CC", EmployeeID = "5", Info = "Info5")
)
data <- as.data.frame(data)
openxlsx::write.xlsx(data, file = "example.xlsx")
# ExcelFilterSplit
# getwd()
MY_input_path <- "example.xlsx"
MY_input_filterby <- "Company"
ExcelFilterSplit::ExcelFilterSplit(
input_path = MY_input_path,
input_filterby = MY_input_filterby
)
View(data)
## Example Excel file
data <- list(
c(Company = "AA", EmployeeID = "1", Info = "Info1"),
c(Company = "BB", EmployeeID = "2", Info = "Info2"),
c(Company = "BB", EmployeeID = "3", Info = "Info3"),
c(Company = "AA", EmployeeID = "4", Info = "Info4"),
c(Company = "CC", EmployeeID = "5", Info = "Info5")
)
data <- t(as.data.frame(data))
openxlsx::write.xlsx(data, file = "example.xlsx")
# ExcelFilterSplit
# getwd()
MY_input_path <- "example.xlsx"
MY_input_filterby <- "Company"
ExcelFilterSplit::ExcelFilterSplit(
input_path = MY_input_path,
input_filterby = MY_input_filterby
)
View(data)
## Example Excel file
data <- list(
c(Company = "AA", EmployeeID = "1", Info = "Info1"),
c(Company = "BB", EmployeeID = "2", Info = "Info2"),
c(Company = "BB", EmployeeID = "3", Info = "Info3"),
c(Company = "AA", EmployeeID = "4", Info = "Info4"),
c(Company = "CC", EmployeeID = "5", Info = "Info5")
)
data <- t(as.data.frame(data))
colnames(data) <- c("Company", "EmployeeID", "Info")
openxlsx::write.xlsx(data, file = "example.xlsx")
# ExcelFilterSplit
# getwd()
MY_input_path <- "example.xlsx"
MY_input_filterby <- "Company"
ExcelFilterSplit::ExcelFilterSplit(
input_path = MY_input_path,
input_filterby = MY_input_filterby
)
View(data)
View(data)
## Example Excel file
data <- list(
c(Company = "AA", EmployeeID = "1", Info = "Info1"),
c(Company = "BB", EmployeeID = "2", Info = "Info2"),
c(Company = "BB", EmployeeID = "3", Info = "Info3"),
c(Company = "AA", EmployeeID = "4", Info = "Info4"),
c(Company = "CC", EmployeeID = "5", Info = "Info5")
)
data <- t(as.data.frame(data))
colnames(data) <- c("Company", "EmployeeID", "Info")
rownames(df) <- NULL
openxlsx::write.xlsx(data, file = "example.xlsx")
# ExcelFilterSplit
# getwd()
MY_input_path <- "example.xlsx"
MY_input_filterby <- "Company"
ExcelFilterSplit::ExcelFilterSplit(
input_path = MY_input_path,
input_filterby = MY_input_filterby
)
## Example Excel file
data <- list(
c(Company = "AA", EmployeeID = "1", Info = "Info1"),
c(Company = "BB", EmployeeID = "2", Info = "Info2"),
c(Company = "BB", EmployeeID = "3", Info = "Info3"),
c(Company = "AA", EmployeeID = "4", Info = "Info4"),
c(Company = "CC", EmployeeID = "5", Info = "Info5")
)
data <- t(as.data.frame(data))
colnames(data) <- c("Company", "EmployeeID", "Info")
rownames(df) <- NULL
openxlsx::write.xlsx(data, file = "example.xlsx")
# ExcelFilterSplit
# getwd()
MY_input_path <- "example.xlsx"
MY_input_filterby <- "Company"
ExcelFilterSplit::ExcelFilterSplit(
input_path = MY_input_path,
input_filterby = MY_input_filterby,
input_EXCsheet = "Sheet 1"
)
#getwd()
MY_input_path <- "/Users/Pro/Desktop/FilterLoop App/FilterLoop/data/TESTTEST.xlsx"
MY_input_filterby <- "Public"
MY_output_names1 <- "2020/12/23"
MY_output_names2 <- "magic"
# MY_output_format
# MY_output_cols
# MY_input_CSVsep
# MY_input_EXCsheet
# MY_output_EXCstyle
MY_output_EXCsheets <-c("Teachers", "Participants2")
# MY_output_maxfiles
# MY_ShinyApp_zipfilename
ExcelFilterSplit(input_path = MY_input_path,
input_filterby = MY_input_filterby,
output_names1 = MY_output_names1,
output_names2 = MY_output_names2,
#output_format = MY_output_format,
#output_cols = MY_output_cols,
#input_CSVsep = MY_input_CSVsep,
#input_EXCsheet = MY_input_EXCsheet,
#output_EXCstyle = MY_output_EXCstyle,
output_EXCsheets = MY_output_EXCsheets,
#output_maxfiles = MY_output_maxfiles,
ShinyApp_zipfilename = NULL
)
## Example Excel file
data <- list(
c(Company = "AA", EmployeeID = "1", Info = "Info1"),
c(Company = "BB", EmployeeID = "2", Info = "Info2"),
c(Company = "BB", EmployeeID = "3", Info = "Info3"),
c(Company = "AA", EmployeeID = "4", Info = "Info4"),
c(Company = "CC", EmployeeID = "5", Info = "Info5")
)
data <- t(as.data.frame(data))
colnames(data) <- c("Company", "EmployeeID", "Info")
rownames(df) <- NULL
head(data)
openxlsx::write.xlsx(data, file = "example.xlsx")
# ExcelFilterSplit
# getwd()
MY_input_path <- "example.xlsx"
MY_input_filterby <- "Company"
ExcelFilterSplit::ExcelFilterSplit(
input_path = MY_input_path,
input_filterby = MY_input_filterby,
input_EXCsheet = "Sheet 1"
)
library(ExcelFilterSplit)
library(ExcelFilterSplit)
library(ExcelFilterSplit)
library(ExcelFilterSplit)
library(ExcelFilterSplit)
set.seed(1234)
#getwd()
MY_input_path <- "/Users/Pro/Desktop/FilterLoop App/FilterLoop/data/TESTTEST.xlsx"
MY_input_filterby <- "Public"
MY_output_names1 <- "2020/12/23"
MY_output_names2 <- "magic"
# MY_output_format
# MY_output_cols
# MY_input_CSVsep
# MY_input_EXCsheet
# MY_output_EXCstyle
MY_output_EXCsheets <-c("Teachers", "Participants2")
# MY_output_maxfiles
# MY_ShinyApp_zipfilename
ExcelFilterSplit::ExcelFilterSplit(input_path = MY_input_path,
input_filterby = MY_input_filterby,
output_names1 = MY_output_names1,
output_names2 = MY_output_names2,
#output_format = MY_output_format,
#output_cols = MY_output_cols,
#input_CSVsep = MY_input_CSVsep,
#input_EXCsheet = MY_input_EXCsheet,
#output_EXCstyle = MY_output_EXCstyle,
output_EXCsheets = MY_output_EXCsheets,
#output_maxfiles = MY_output_maxfiles,
ShinyApp_zipfilename = NULL
)
######
## Example Excel file
data <- list(
c(Company = "AA", EmployeeID = "1", Info = "Info1"),
c(Company = "BB", EmployeeID = "2", Info = "Info2"),
c(Company = "BB", EmployeeID = "3", Info = "Info3"),
c(Company = "AA", EmployeeID = "4", Info = "Info4"),
c(Company = "CC", EmployeeID = "5", Info = "Info5")
)
data <- t(as.data.frame(data))
colnames(data) <- c("Company", "EmployeeID", "Info")
rownames(df) <- NULL
head(data)
# openxlsx::write.xlsx(data, file = "example.xlsx")
# ExcelFilterSplit
# getwd()
MY_input_path <- "example.xlsx"
MY_input_filterby <- "Company"
# ExcelFilterSplit::ExcelFilterSplit(
#   input_path = MY_input_path,
#   input_filterby = MY_input_filterby,
#   input_EXCsheet = "Sheet 1"
# )
View(data)
rownames(df) <- NULL
View(data)
View(data)
rownames(data) <- NULL
View(data)
data <- list(
c(Company = "AA", EmployeeID = "1", Info = "Info1"),
c(Company = "BB", EmployeeID = "2", Info = "Info2"),
c(Company = "BB", EmployeeID = "3", Info = "Info3"),
c(Company = "AA", EmployeeID = "4", Info = "Info4"),
c(Company = "CC", EmployeeID = "5", Info = "Info5")
)
data <- t(as.data.frame(data))
colnames(data) <- c("Company", "EmployeeID", "Info")
rownames(data) <- NULL
head(data)
openxlsx::write.xlsx(data, file = "example.xlsx")
# ExcelFilterSplit
getwd()
MY_input_path <- "example.xlsx"
MY_input_filterby <- "Company"
ExcelFilterSplit::ExcelFilterSplit(
input_path = MY_input_path,
input_filterby = MY_input_filterby
#input_EXCsheet = "Sheet 1"
)
print(is.null(styleObjects))
library(ExcelFilterSplit)
library(ExcelFilterSplit)
set.seed(1234)
data <- list(
c(Company = "AA", EmployeeID = "1", Info = "Info1"),
c(Company = "BB", EmployeeID = "2", Info = "Info2"),
c(Company = "BB", EmployeeID = "3", Info = "Info3"),
c(Company = "AA", EmployeeID = "4", Info = "Info4"),
c(Company = "CC", EmployeeID = "5", Info = "Info5")
)
data <- t(as.data.frame(data))
colnames(data) <- c("Company", "EmployeeID", "Info")
rownames(data) <- NULL
head(data)
openxlsx::write.xlsx(data, file = "example.xlsx")
# ExcelFilterSplit
getwd()
MY_input_path <- "example.xlsx"
MY_input_filterby <- "Company"
ExcelFilterSplit::ExcelFilterSplit(
input_path = MY_input_path,
input_filterby = MY_input_filterby
)
library(ExcelFilterSplit)
library(ExcelFilterSplit)
set.seed(1234)
data <- list(
c(Company = "AA", EmployeeID = "1", Info = "Info1"),
c(Company = "BB", EmployeeID = "2", Info = "Info2"),
c(Company = "BB", EmployeeID = "3", Info = "Info3"),
c(Company = "AA", EmployeeID = "4", Info = "Info4"),
c(Company = "CC", EmployeeID = "5", Info = "Info5")
)
data <- t(as.data.frame(data))
colnames(data) <- c("Company", "EmployeeID", "Info")
rownames(data) <- NULL
head(data)
openxlsx::write.xlsx(data, file = "example.xlsx")
# ExcelFilterSplit
getwd()
MY_input_path <- "example.xlsx"
MY_input_filterby <- "Company"
ExcelFilterSplit::ExcelFilterSplit(
input_path = MY_input_path,
input_filterby = MY_input_filterby
)
library(ExcelFilterSplit)
library(ExcelFilterSplit)
set.seed(1234)
data <- list(
c(Company = "AA", EmployeeID = "1", Info = "Info1"),
c(Company = "BB", EmployeeID = "2", Info = "Info2"),
c(Company = "BB", EmployeeID = "3", Info = "Info3"),
c(Company = "AA", EmployeeID = "4", Info = "Info4"),
c(Company = "CC", EmployeeID = "5", Info = "Info5")
)
data <- t(as.data.frame(data))
colnames(data) <- c("Company", "EmployeeID", "Info")
rownames(data) <- NULL
head(data)
openxlsx::write.xlsx(data, file = "example.xlsx")
# ExcelFilterSplit
getwd()
MY_input_path <- "example.xlsx"
MY_input_filterby <- "Company"
ExcelFilterSplit::ExcelFilterSplit(
input_path = MY_input_path,
input_filterby = MY_input_filterby
)
MY_input_path <- "/Users/Pro/Desktop/FilterLoop App/FilterLoop/data/TESTTEST.xlsx"
MY_input_filterby <- "Public"
MY_output_names1 <- "2020/12/23"
MY_output_names2 <- "magic"
# MY_output_format
# MY_output_cols
# MY_input_CSVsep
# MY_input_EXCsheet
# MY_output_EXCstyle
MY_output_EXCsheets <-c("Teachers", "Participants2")
# MY_output_maxfiles
# MY_ShinyApp_zipfilename
ExcelFilterSplit::ExcelFilterSplit(input_path = MY_input_path,
input_filterby = MY_input_filterby,
output_names1 = MY_output_names1,
output_names2 = MY_output_names2,
#output_format = MY_output_format,
#output_cols = MY_output_cols,
#input_CSVsep = MY_input_CSVsep,
#input_EXCsheet = MY_input_EXCsheet,
#output_EXCstyle = MY_output_EXCstyle,
output_EXCsheets = MY_output_EXCsheets,
#output_maxfiles = MY_output_maxfiles,
ShinyApp_zipfilename = NULL
)
shiny::runApp('~/Desktop/FilterLoop App/FilterLoop')
runApp('~/Desktop/FilterLoop App/FilterLoop')
runApp('~/Desktop/FilterLoop App/FilterLoop')
library(ExcelFilterSplit)
library(ExcelFilterSplit)
runApp('~/Desktop/FilterLoop App/FilterLoop')
styler:::style_active_file()
library(ExcelFilterSplit)
library(ExcelFilterSplit)
runApp('~/Desktop/FilterLoop App/FilterLoop')
library(ExcelFilterSplit)
runApp('~/Desktop/FilterLoop App/FilterLoop')
library(ExcelFilterSplit)
runApp()
library(ExcelFilterSplit)
runApp()
library(ExcelFilterSplit)
runApp()
library(ExcelFilterSplit)
runApp()
library(ExcelFilterSplit)
runApp()
library(ExcelFilterSplit)
runApp()
browseVignettes(dplyr)
browseVignettes("dplyr")
library(ExcelFilterSplit)
library(ExcelFilterSplit)
library(ExcelFilterSplit)
help("library")
library(ExcelFilterSplit)
library(ExcelFilterSplit)
library(ExcelFilterSplit)
library(ExcelFilterSplit)
library(ExcelFilterSplit)
library(ExcelFilterSplit)
git remote add origin https://github.com/thibault-mrn/ExcelFilterSplit.git
git commit -m "initial commit"
git commit -u push origin master
git remote add origin https://github.com/thibault-mrn/ExcelFilterSplit.git
library(ExcelFilterSplit)
library(ExcelFilterSplit)
devtools::load_all(".")
library(ExcelFilterSplit)
devtools::load_all(".")
library(ExcelFilterSplit)
git push
library(ExcelFilterSplit)
