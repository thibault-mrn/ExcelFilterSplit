% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ExcelFilterSplit.R
\name{ExcelFilterSplit}
\alias{ExcelFilterSplit}
\title{ExcelFilterSplit}
\usage{
ExcelFilterSplit(
  input_path,
  input_filterby,
  output_names1 = NULL,
  output_names2 = NULL,
  output_format = "excel",
  output_cols = NULL,
  CSVsep = c(",", "."),
  input_EXCsheet = 1,
  output_EXCstyle = "default",
  output_EXCsheets = NULL,
  output_maxfiles = 269,
  ShinyApp_zipfilename = NULL
)
}
\arguments{
\item{input_path}{a character string (file path) that ends in ".xlsx" or ".xls" or ".csv". Note that the file must be local (a URL does not work).}

\item{input_filterby}{a character string (column name) or a numeric integrer (column index)}

\item{output_names1}{a character string, or NULL (for no value). Output names of type: \strong{names1 ( filterby ) names2 .extension}}

\item{output_names2}{a character string, or NULL (for basename(input_path) without ext.)}

\item{output_format}{a character string : "default" (for the input file format) or "excel" or "csv"}

\item{output_cols}{a list of character string (columns names) or a list of numeric integrers (columns indexes) or NULL (for all columns)}

\item{CSVsep}{a list of 2 character string (field sep , decimal sep). Ignored if not CSV input file and/or CSV output files.}

\item{input_EXCsheet}{a character string (sheet name) or a numeric vector (sheet index). Ignored if CSV input file.}

\item{output_EXCstyle}{a character string : one of Excel TableStyles or "default" (for "keep_style" if Excel input; for "TableStyleMedium18" if CSV input ) or "none" or "keep_style". Ignored if CSV output files.}

\item{output_EXCsheets}{a list of character string (sheet names) or a list of numeric integrers (sheet indexes) or NULL (for no sheet). Ignored if CSV output files.}

\item{output_maxfiles}{a numeric vector}

\item{ShinyApp_zipfilename}{a character string (file path) that ends in ".zip". Needed for a use in a ShinyApp environment with a DownloadHandler. It will also activate the shiny::incProgress in case you want to add a progress bar in your app.}
}
\description{
This package will help you create multiple filtered Excel/CSV files. Filtering is made by choosing a column ; one output file per unique value of the selected column (not case sensitive ; not sensitive to accents).
If you choose Excel output format, you have different styles available, but you can also keep the format and style of your original Excel input file.
Output files are compressed into a Zip folder. The file will be export into your current working directory.
}
\details{
In your Excel sheet, make sure the data starts in cell A2 and columnns in cell A1.
The output zip file containing your multiple output files will be created in your current working directory.
Same CSV separators are used for input and output CSV files
}
\examples{

## Excel file for example

data <- list(
  c(Company = "AA", EmployeeID = "1", Info = "Info1"),
  c(Company = "BB", EmployeeID = "2", Info = "Info2"),
  c(Company = "BB", EmployeeID = "3", Info = "Info3"),
  c(Company = "AA", EmployeeID = "4", Info = "Info4"),
  c(Company = "CC", EmployeeID = "5", Info = "Info5")
)
data <- t(as.data.frame(data))
colnames(data) <- c("Company", "EmployeeID", "Info")
rownames(data) <- NULL
head(data)

getwd()
openxlsx::write.xlsx(data, file = "example.xlsx")


## ExcelFilterSplit function

MY_input_path <- "example.xlsx"
MY_input_filterby <- "Company"


ExcelFilterSplit::ExcelFilterSplit(
  input_path = MY_input_path,
  input_filterby = MY_input_filterby
)


}
\seealso{
\code{\link{ExcelFilterSplit}}
}
\author{
Thibault Maurin (\email{tmaurin.pro@gmail.com})
}
\keyword{ExcelFilerSplit}
